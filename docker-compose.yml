version: '2'

services:  
  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - "127.0.0.1:5432:5432" # host:node

  mongodb:
    container_name: mongodb
    image: mongo:latest # :3.0.2
    environment:
      - MONGO_DATA_DIR:/data/mongodb
      - MONGO_LOG_DIR:/dev/null
    volumes: # these node volume paths are image-specific; cannot be changed
      - ./data/mongodb/db:/data/db # host:node
      - ./data/mongodb/configdb:/data/configdb
      - ./data/mongodb/backups:/backups
    ports:
      - "127.0.0.1:27017:27017"
    command:
      - '--bind_ip=0.0.0.0 --smallfiles' # appends as args to entrypoint
    environment:
      - MONGO_DBNAME=data

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "127.0.0.1:80:80"
    # volumes:
    #   - ./src:/src
    command: /bin/bash -c "nginx -g 'daemon off;'"

  scrape:
    container_name: scrape
    build:
      context: ./scrape
      dockerfile: ./Dockerfile
    # command: "tail -f /dev/null"
    command: /bin/bash -c "source venv/bin/activate && scrapy crawl empireflippers && scrapy crawl flippa && python requests/feinternational.py && echo 'Ran scripts!'"
    links: # resolves cname from another container
      - mongodb:mongodb # docker service:alias
      - postgres:postgres
    depends_on:
      - mongodb
    environment:
      - MONGO_URL=mongodb

  # web:
  #   container_name: web
  #   build: deploy/web
  #   command: bash -c "python manage.py makemigrations && python manage.py migrate && uwsgi mydjango.wsgi -b 0.0.0.0:8000"
  #   depends_on:
  #     - postgres
  #     - nginx
  #   volumes:
  #     - ./src:/src
  #   expose:
  #     - "8000"
